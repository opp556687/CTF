

# This file was *autogenerated* from the file exploit.sage
from sage.all_cmdline import *   # import sage library

_sage_const_48581831406795994297084387875908073313351613309409699802212849541437777313122084789367619979954427646991517141229352987075806819683785286275425466760042896412323863176295270262454852592225929680726666553857406533085950170538333531662851921033001954744540998800354945472568877832939334190993251808713852258863 = Integer(48581831406795994297084387875908073313351613309409699802212849541437777313122084789367619979954427646991517141229352987075806819683785286275425466760042896412323863176295270262454852592225929680726666553857406533085950170538333531662851921033001954744540998800354945472568877832939334190993251808713852258863); _sage_const_24599617483042629578277285121173972504912037859463986046909740409463586319449226283343281615331318429105218275830212466271037796920749914715936814706377048655769225549466920127520555595115275564186559817818323021427991884151664970652516767069186401865986263921250135587004577360458810521385005579290744708085 = Integer(24599617483042629578277285121173972504912037859463986046909740409463586319449226283343281615331318429105218275830212466271037796920749914715936814706377048655769225549466920127520555595115275564186559817818323021427991884151664970652516767069186401865986263921250135587004577360458810521385005579290744708085); _sage_const_128 = Integer(128); _sage_const_2 = Integer(2); _sage_const_16 = Integer(16); _sage_const_8 = Integer(8); _sage_const_3 = Integer(3)
from Crypto.Util.number import *

n = _sage_const_48581831406795994297084387875908073313351613309409699802212849541437777313122084789367619979954427646991517141229352987075806819683785286275425466760042896412323863176295270262454852592225929680726666553857406533085950170538333531662851921033001954744540998800354945472568877832939334190993251808713852258863 
c = _sage_const_24599617483042629578277285121173972504912037859463986046909740409463586319449226283343281615331318429105218275830212466271037796920749914715936814706377048655769225549466920127520555595115275564186559817818323021427991884151664970652516767069186401865986263921250135587004577360458810521385005579290744708085 

P = PolynomialRing(Zmod(n), names=('x',)); (x,) = P._first_ngens(1)

pad = b'\x00' + b'\xff' * (_sage_const_128  - _sage_const_2  - _sage_const_16 ) + b'\x00'
pad = bytes_to_long(pad) << (_sage_const_8  * _sage_const_16 )

f = (pad + x)**_sage_const_3  - c
roots = f.small_roots()
for root in roots:
    print(long_to_bytes(root))

