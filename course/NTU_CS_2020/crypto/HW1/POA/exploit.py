from pwn import *

# r = remote('140.112.31.97', 30000)
r = process(['python3', 'server.py'])

def oracle(message):
    r.sendlineafter('cipher = ', message.hex())
    if b'YESSSSSSSS' in r.recvline():
        return True
    else:
        return False

def xor(a, b):
    return bytes([x^y for x, y in zip(a, b)])

cipher = bytes.fromhex(r.recvline().strip().split(b' = ')[1].decode())
flag = b''
padlen = 15
for i in range(16, len(cipher), 16):
    iv, block = cipher[i-16:i], cipher[i: i+16]
    ans = b''
    for j in range(16):
        for k in range(256):
            if k == iv[16-1-j]:
                continue
            enc = iv[:16-1-j] + bytes([k]) + xor(iv[-j:], xor([0x00]*j, ans)) + block
            if len(enc) == 31:
                ans = bytes([iv[16-1-(j-1)] ^ iv[16-1-(j-1)] ^ 0x80]) + ans
                k = -1
                continue
            if oracle(enc):
                ans = bytes([iv[16-1-j] ^ k ^ 0x80]) + ans
                print(ans)
                break
    flag += ans
print(flag)